---
import { getCollection } from "astro:content";

// Pull all blog posts regardless of current page
const allPosts = await getCollection("blog");

// Collect unique tags
const tags = allPosts
    .flatMap((post) => post.data.tags ?? [])
    .filter((v, i, self) => self.indexOf(v) === i)
    .sort();
---

<div class="tags">
    {
        tags.map((tag) => (
            <a class="tag" href={`/tags/${tag.toLowerCase()}/`}>
                {tag}
            </a>
        ))
    }
</div>
<style>
    .tags {
        display: flex;
        flex-wrap: wrap;
    }

    .tag {
        position: relative;
        display: inline-block;
        cursor: pointer;
        outline: none;
        border: 0;
        vertical-align: middle;
        text-decoration: none;
        font-family: inherit;
        font-size: 0.8em;
        font-weight: 400;
        color: teal;
        text-transform: uppercase;
        padding: 0.625em 1em;
        background: #fff0f0;
        border: 2px solid #b18597;
        border-radius: 0.375em;
        -webkit-transform-style: preserve-3d;
        transform-style: preserve-3d;
        -webkit-transition:
            background 150ms cubic-bezier(0, 0, 0.58, 1),
            -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1);
        transition:
            transform 150ms cubic-bezier(0, 0, 0.58, 1),
            background 150ms cubic-bezier(0, 0, 0.58, 1),
            -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1);
    }
    .tag::before {
        position: absolute;
        content: "";
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: #f9c4d2;
        border-radius: inherit;
        -webkit-box-shadow:
            0 0 0 2px #b18597,
            0 0.625em 0 0 #ffe3e2;
        box-shadow:
            0 0 0 2px #b18597,
            0 0.3125em 0 0 #ffe3e2;
        -webkit-transform: translate3d(0, 0.75em, -1em);
        transform: translate3d(0, 0.375em, -0.5em);
        transition:
            transform 150ms cubic-bezier(0, 0, 0.58, 1),
            box-shadow 150ms cubic-bezier(0, 0, 0.58, 1),
            -webkit-transform 150ms cubic-bezier(0, 0, 0.58, 1),
            -webkit-box-shadow 150ms cubic-bezier(0, 0, 0.58, 1);
    }
    .tag:hover::before {
        -webkit-box-shadow:
            0 0 0 2px #b18597,
            0 0.5em 0 0 #ffe3e2;
        box-shadow:
            0 0 0 2px #b18597,
            0 0.25em 0 0 #ffe3e2;
        transform: translate3d(0, 0.25em, -0.5em);
    }

    .tag:active {
        background: #ffe9e9;
        -webkit-transform: translate(0em, 0.75em);
        transform: translate(0em, 0.375em);
    }

    .tag:active::before {
        -webkit-box-shadow:
            0 0 0 2px #b18597,
            0 0 #ffe3e2;
        box-shadow:
            0 0 0 2px #b18597,
            0 0 #ffe3e2;
        -webkit-transform: translate3d(0, 0, -1em);
        transform: translate3d(0, 0, -0.5em);
    }
</style>
